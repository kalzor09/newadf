{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfkartik"
		},
		"AssignContainerLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AssignContainerLS'"
		},
		"AzureSynapseAnalyticsLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSynapseAnalyticsLS'"
		},
		"ExcelFileSource_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ExcelFileSource'"
		},
		"SQLServerAW_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLServerAW'"
		},
		"SQLServerAW_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SQLServerAW'"
		},
		"SampleDBLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SampleDBLS'"
		},
		"SqlLS_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlLS'"
		},
		"SqlLS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlLS'"
		},
		"linkedService1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'linkedService1'"
		},
		"ExcelFileSource_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Users\\karti\\Desktop\\Lectures\\ADF\\"
		},
		"ExcelFileSource_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "kartikbhat9819@gmail.com"
		},
		"SQLServerAW_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kartikbhat9819@gmail.com"
		},
		"SqlLS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "kartikbhat9819@gmail.com"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromExcelSheetToSynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.sheetList",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "FileServerReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": false
											},
											"tableOption": "autoCreate"
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "linkedService1",
												"type": "LinkedServiceReference"
											},
											"path": "assign3"
										}
									},
									"inputs": [
										{
											"referenceName": "Excel1",
											"type": "DatasetReference",
											"parameters": {
												"sheetName": {
													"value": "@item().sheetName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSynapseAnalyticsTable1",
											"type": "DatasetReference",
											"parameters": {
												"sheetName": {
													"value": "@item().sheetName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"sheetList": {
						"type": "array",
						"defaultValue": [
							{
								"sheetName": "Customer"
							},
							{
								"sheetName": "Product"
							},
							{
								"sheetName": "Orders"
							},
							{
								"sheetName": "Location"
							},
							{
								"sheetName": "Order_Details"
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Excel1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSynapseAnalyticsTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/linkedService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromOnPremise')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from Onprem to Azure SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"SourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"sourceSchema": {
										"value": "@pipeline().parameters.SourceSchema",
										"type": "Expression"
									},
									"SourceTable": {
										"value": "@pipeline().parameters.SourceTable",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"SourceSchema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"SourceTable": {
						"type": "string",
						"defaultValue": "DimProductS"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-04-05T09:30:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyHRDeptFromSQLToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Distinct Dept Numbers",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "Select DepartmentID,Name from HumanResources.Department",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerTable2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Distinct Dept Numbers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Distinct Dept Numbers').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderQuery": {
												"value": "Select FirstName+' '+LastName as EmpName from Person.Person where BusinessEntityID IN (Select BusinessEntityID from HumanResources.EmployeeDepartmentHistory where DepartmentID=@{item().DepartmentID})",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerTable2",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SampleDataset",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().Name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable2')]",
				"[concat(variables('factoryId'), '/datasets/SampleDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SampleDBLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sourceSchema": {
						"type": "String"
					},
					"SourceTable": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().sourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SampleDBLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalyticsLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sheetName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().sheetName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSynapseAnalyticsLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ExcelFileSource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sheetName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().sheetName",
						"type": "Expression"
					},
					"location": {
						"type": "FileServerLocation",
						"fileName": "SalesData.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ExcelFileSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AssignContainerLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"sheetName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().sheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "SalesData.xlsx",
						"container": "output"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AssignContainerLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SampleDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SampleDBLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SampleDBLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceSchema": {
						"type": "String"
					},
					"SourceTable": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().SourceSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLServerAW",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "DepartmentID",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "GroupName",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "HumanResources",
					"table": "Department"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLServerAW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AssignContainerLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AssignContainerLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSynapseAnalyticsLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('AzureSynapseAnalyticsLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExcelFileSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('ExcelFileSource_properties_typeProperties_host')]",
					"userId": "[parameters('ExcelFileSource_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ExcelFileSource_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLServerAW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SQLServerAW_connectionString')]",
					"userName": "[parameters('SQLServerAW_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SQLServerAW_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SampleDBLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SampleDBLS_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlLS_connectionString')]",
					"userName": "[parameters('SqlLS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlLS_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/linkedService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('linkedService1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}